version: '3.8'

services:
  postgres:
    image: postgres:13
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - recommender-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - .env
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - recommender-net

  mlflow:
    build:
      context: ./mlflow
    env_file:
      - .env
    ports:
      - "5000:5000"
    volumes:
      - mlflow_artifacts:/mlflow
    depends_on:
      - postgres
    networks:
      - recommender-net

  backend:
    build:
      context: ./backend
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      mlflow:
        condition: service_started
    networks:
      - recommender-net

  frontend:
    build:
      context: ./frontend
    env_file:
      - .env
    ports:
      - "8501:8501"
    volumes:
      - ./data:/app/data
    depends_on:
      - backend
    networks:
      - recommender-net

  portainer:
    image: portainer/portainer-ce
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - recommender-net

volumes:
  postgres_data:
  mlflow_artifacts:
  portainer_data:

networks:
  recommender-net:
    driver: bridge